package ru.easydonate.exploitfix.listener;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.wrappers.WrappedChatComponent;
import net.md_5.bungee.api.chat.BaseComponent;
import net.md_5.bungee.api.chat.TextComponent;
import net.md_5.bungee.chat.ComponentSerializer;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public final class ProtocolChatPacketListener extends PacketAdapter {

    private final Pattern detectorPattern;

    public ProtocolChatPacketListener(Plugin plugin, Pattern detectorPattern) {
        super(plugin, ListenerPriority.LOWEST,
                PacketType.Play.Client.CHAT,
                PacketType.Play.Server.CHAT
        );
        this.detectorPattern = detectorPattern;

        ProtocolLibrary.getProtocolManager().addPacketListener(this);
    }

    @Override
    public void onPacketSending(PacketEvent event) {
        if(event.getPacketType() != PacketType.Play.Server.CHAT)
            return;

        PacketContainer packet = event.getPacket();
        WrappedChatComponent chatComponent = packet.getChatComponents().readSafely(0);
        if(chatComponent == null)
            return;

        String componentJson = chatComponent.getJson();
        BaseComponent[] componentsArray = ComponentSerializer.parse(componentJson);
        String message = TextComponent.toPlainText(componentsArray);

        Matcher matcher = detectorPattern.matcher(message.toLowerCase());
        if(matcher.find()) {
            event.setCancelled(true);
            packet.getChatComponents().write(0, WrappedChatComponent.fromText(""));
        }
    }

    @Override
    public void onPacketReceiving(PacketEvent event) {
        if(event.getPacketType() != PacketType.Play.Client.CHAT)
            return;

        PacketContainer packet = event.getPacket();
        String message = packet.getStrings().read(0);

        Matcher matcher = detectorPattern.matcher(message.toLowerCase());
        if(matcher.find()) {
            Player player = event.getPlayer();
            getPlugin().getLogger().warning(player.getName() + " tried to use the Log4j2 exploit!");

            event.setCancelled(true);
            packet.getStrings().write(0, "");
        }
    }

}
